[tox]
minversion = 3.1.1
envlist = py38,pep8
skipsdist = True
ignore_basepython_conflict = true

[testenv]
basepython = python3
usedevelop = True
setenv =
   VIRTUAL_ENV={envdir}
   OS_DEBUG=1
   OS_STDOUT_CAPTURE=1
   OS_STDERR_CAPTURE=1
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
commands = stestr run --slowest {posargs}

[testenv:pep8]
commands = flake8 {posargs}

[testenv:venv]
commands = {posargs}

[testenv:cover]
deps = {[testenv]deps}
    coverage
setenv =
    PYTHON=coverage run --source oslo_upgradecheck --parallel-mode
commands =
    stestr run '{posargs}'
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:docs]
whitelist_externals =
  rm
deps =
  {[testenv]deps}
  -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf doc/build
  sphinx-build -W --keep-going -b html doc/source doc/build/html

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:lower-constraints]
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt

[testenv:releasenotes]
deps = {[testenv:docs]deps}
whitelist_externals =
  rm
commands =
  rm -rf releasenotes/build
  sphinx-build -a -E -W -d releasenotes/build/doctrees --keep-going -b html releasenotes/source releasenotes/build/html

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125,W504
builtins = _
exclude=.venv,.git,.tox,dist,doc,releasenotes,*lib/python*,*egg,build

[hacking]
import_exception = oslo_upgradecheck._i18n
